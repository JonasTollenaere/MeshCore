variables:
  GIT_SUBMODULE_FORCE_HTTPS: "true"
  GIT_SUBMODULE_STRATEGY: recursive

image: ubuntu:22.04

stages:
  - build
  - test

build-ubuntu-2204:
  stage: build
  script:
    
    # Required to avoid prompts when installing tzdata dependency
    - export DEBIAN_FRONTEND=noninteractive
    - export TZ='Europe/Brussels'

    # Install a boatload of dependencies to get qt installed
    - apt-get update
    - apt-get -y install git curl zip unzip tar cmake build-essential ninja-build pkg-config autoconf automake libtool libxmu-dev python3 python3-jinja2 python3-setuptools bison freeglut3-dev iputils-ping libgl1-mesa-dev libglu1-mesa-dev libjpeg-dev libmysqlclient-dev libnss3-dev libopus-dev libpng-dev libsqlite3-dev libssl-dev libx11-xcb-dev libxcb-xinerama0-dev libxcb-xkb-dev libxcb1-dev libxcursor-dev libxi-dev libxml2-dev libxrender-dev libxslt-dev mesa-common-dev zlib1g-dev '^libxcb.*-dev' libxkbcommon-dev libxkbcommon-x11-dev libgl-dev libdbus-1-dev libxtst-dev
    - apt-get -y upgrade gcc

    # Install vcpkg dependencies
    - mkdir -p $CI_PROJECT_DIR/vcpkg-binary-cache
    - export VCPKG_DEFAULT_BINARY_CACHE=$CI_PROJECT_DIR/vcpkg-binary-cache
    - git clone https://github.com/microsoft/vcpkg.git vcpkg
    - ./vcpkg/bootstrap-vcpkg.sh
    - ./vcpkg/vcpkg install

    # Configure and build the CMake project
    - mkdir -p build
    - cd build
    - cmake .. -DCMAKE_TOOLCHAIN_FILE=vcpkg/scripts/buildsystems/vcpkg.cmake -DCMAKE_BUILD_TYPE="Release"
    - cmake --build . -j $CI_JOB_CPU_LIMIT

  cache:
    - key: vcpkg-binary-cache
      paths:
        - vcpkg-binary-cache
    - key: build-cache
      paths:
        - build
  artifacts:
    # when: always
    paths:
      - build/tests

test:
  stage: test
  needs: [build-ubuntu-2204]
  script:
    - apt-get update && apt-get install -y locales
    - locale-gen en_US.UTF-8
    - cd build
    - ls -lta
    - cd tests
    - ./Tests --gtest_output="xml:report.xml"
  artifacts:
    when: always
    reports:
      junit: build/tests/report.xml
